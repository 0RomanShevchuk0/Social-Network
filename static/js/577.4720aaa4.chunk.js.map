{"version":3,"file":"static/js/577.4720aaa4.chunk.js","mappings":"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","sources":["common/Input/Input.jsx","webpack://react-test/./src/components/Login/Login.module.scss?4086","components/Login/Captcha.jsx","components/Login/Login.jsx"],"sourcesContent":["import { Field, useField } from \"formik\"\r\n\r\nimport styles from './Input.module.scss'\r\n\r\n\r\nconst Input = (props) => {\r\n\tconst [field ,meta, helpers] = useField(props);\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Field {...props} className={meta.error && meta.touched ? \r\n\t\t\t\t[props.className, styles.inputError].join(' ') : props.className} \r\n\t\t\t/>\r\n\t\t\t{meta.error && meta.touched && <div className={styles.error}>{meta.error}</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Input;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__YiOI8\",\"loginForm\":\"Login_loginForm__VQQoC\",\"inputContainer\":\"Login_inputContainer__iS35b\",\"emailInput\":\"Login_emailInput__ZCUWZ\",\"passwordInput\":\"Login_passwordInput__lGaq4\",\"showPassword\":\"Login_showPassword__IXDcS\",\"captchaContainer\":\"Login_captchaContainer__Yed1m\",\"captchaInput\":\"Login_captchaInput__GwYFj\",\"captchaImg\":\"Login_captchaImg__BiJ5u\",\"submitBlock\":\"Login_submitBlock__a6W8Z\",\"submitButton\":\"Login_submitButton__bn+qZ\",\"error\":\"Login_error__bPe2+\",\"tip\":\"Login_tip__WPsBN\",\"tipBody\":\"Login_tipBody__dOFJr\",\"hidden\":\"Login_hidden__KkhXM\"};","import { Field } from 'formik';\r\nimport Input from '../../common/Input/Input';\r\nimport { RequiredField } from '../../common/validator';\r\n\r\nimport styles from \"./Login.module.scss\";\r\n\r\n\r\nfunction Captcha(props) {\r\n\treturn (\r\n\t\t<div className={styles.captchaContainer}>\r\n\t\t\t<img src={props.captchaImg} alt=\"captcha\" className={styles.captchaImg} />\r\n\t\t\t<Field\r\n\t\t\t\tname=\"captcha\"\r\n\t\t\t\tvalidate={RequiredField}\r\n\t\t\t\tas={Input}\r\n\t\t\t\tplaceholder=\"Captcha\"\r\n\t\t\t\tclassName={`${styles.passwordInput} ${styles.captchaInput}`}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default Captcha;","import { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nimport Captcha from './Captcha';\r\nimport { getCaptcha, login } from '../../redux/auth-reducer';\r\nimport { RequiredField } from '../../common/validator';\r\n\r\nimport styles from \"./Login.module.scss\";\r\nimport showPassword from \"../../assets/img/show.png\";\r\nimport hidePassword from \"../../assets/img/hide.png\";\r\nimport Input from '../../common/Input/Input';\r\n\r\n\r\nconst Login = (props) => {\r\n\t\r\n\tconst [passwordVisibility, setPasswordVisibility] = useState(\"password\");\r\n\tconst [passwordIcon, setPasswordIcon] = useState(showPassword);\r\n\r\n\tasync function handleSubmit(values, submitProps) {\r\n\t\tconst response = await props.login(values.email, values.password, true, values.captcha, submitProps.setStatus)\r\n\t\tif(response === \"captcha\") {\r\n\t\t\tawait props.getCaptcha();\r\n\t\t\tsubmitProps.setFieldValue(\"captcha\", \"\");\r\n\t\t}\r\n\t\tsubmitProps.setSubmitting(false);\r\n\t}\r\n\t\r\n\tfunction passwordVisible() {\r\n\t\tif(passwordVisibility === \"password\") {\r\n\t\t\tsetPasswordVisibility(\"text\");\r\n\t\t\tsetPasswordIcon(hidePassword);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetPasswordVisibility(\"password\");\r\n\t\t\tsetPasswordIcon(showPassword);\r\n\t\t}\r\n\t}\r\n\t\r\n\tif(props.isAuth) return <Navigate to=\"/profile\"/>;\r\n\r\n\treturn(\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<h1>Social Network</h1>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ email: \"\", password: \"\", rememberMe: false, captcha: \"\" }}\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t>\r\n\t\t\t\t{({ isSubmitting, status }) => (\r\n\t\t\t\t\t<Form className={styles.loginForm}>\r\n\t\t\t\t\t\t<div className={styles.inputContainer}>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tas={Input}\r\n\t\t\t\t\t\t\t\tvalidate={RequiredField}\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Login\"\r\n\t\t\t\t\t\t\t\tclassName={styles.emailInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className={styles.inputContainer}>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tas={Input}\r\n\t\t\t\t\t\t\t\tvalidate={RequiredField}\r\n\t\t\t\t\t\t\t\ttype={passwordVisibility}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tclassName={styles.passwordInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className={styles.showPassword} onClick={passwordVisible}>\r\n\t\t\t\t\t\t\t\t<img src={passwordIcon} alt=\"showPassword\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.submitBlock}>\r\n\t\t\t\t\t\t\t<div className={styles.error}>{status ? status.error : null}</div>\r\n\t\t\t\t\t\t\t{props.captchaImg && <Captcha captchaImg={props.captchaImg} /> }\r\n\t\t\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting} className={styles.submitButton}>Log in</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t\t<div className={styles.tip}>\r\n\t\t\t\t<h4 \r\n\t\t\t\t\tonClick={(e) => {e.target.nextElementSibling.classList.contains(styles.hidden) ?\r\n\t\t\t\t\t\te.target.nextElementSibling.classList.remove(styles.hidden) :\r\n\t\t\t\t\t\te.target.nextElementSibling.classList.add(styles.hidden)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tDon't have an account?\r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className={`${styles.tipBody} ${styles.hidden}`}>\r\n\t\t\t\t\t<div><span style={{fontWeight: \"bold\"}}>Login:</span> 0romanshevchuk0@gmail.com</div>\r\n\t\t\t\t\t<div><span style={{fontWeight: \"bold\"}}>Password:</span> test</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth,\r\n\t\tcaptchaImg: state.auth.captchaImg\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { login, getCaptcha })(Login);\r\n"],"names":["props","useField","meta","className","error","touched","styles","join","src","captchaImg","alt","name","validate","RequiredField","as","Input","placeholder","connect","state","isAuth","auth","login","getCaptcha","useState","passwordVisibility","setPasswordVisibility","showPassword","passwordIcon","setPasswordIcon","values","submitProps","email","password","captcha","setStatus","setFieldValue","setSubmitting","passwordVisible","hidePassword","to","initialValues","rememberMe","onSubmit","isSubmitting","status","type","onClick","disabled","e","target","nextElementSibling","classList","contains","remove","add","style","fontWeight"],"sourceRoot":""}