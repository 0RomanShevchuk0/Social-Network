{"version":3,"file":"static/js/596.09dfd11a.chunk.js","mappings":"wPACA,GAAgB,QAAU,uBAAuB,eAAiB,8BAA8B,WAAa,0BAA0B,cAAgB,6BAA6B,aAAe,4BAA4B,cAAgB,6BAA6B,YAAc,2BAA2B,aAAe,4BAA4B,MAAQ,sB,gHCAxW,GAAgB,WAAa,0BAA0B,MAAQ,sB,SCiB/D,EAbc,SAACA,GACd,OAA+BC,EAAAA,EAAAA,IAASD,GAAM,eAAhCE,GAAF,KAAM,MAAS,KAE3B,OACC,4BACC,SAAC,MAAK,kBAAKF,GAAK,IAAEG,UAAWD,EAAKE,OAASF,EAAKG,QAC/C,CAACL,EAAMG,UAAWG,EAAAA,YAAmBC,KAAK,KAAOP,EAAMG,aAEvDD,EAAKE,OAASF,EAAKG,UAAW,gBAAKF,UAAWG,EAAAA,MAAa,SAAEJ,EAAKE,UAGtE,EC0EA,SAASI,EAAQR,GAChB,OACC,iBAAKG,UAAU,GAAE,WAChB,gBAAKM,IAAKT,EAAMU,WAAYC,IAAI,aAChC,SAAC,KAAK,CACLC,KAAK,UACLC,GAAIC,EACJC,YAAY,UACZZ,UAAWG,EAAAA,kBAIf,CAEA,IAQA,GAAeU,EAAAA,EAAAA,KARS,SAACC,GACxB,MAAO,CACNC,OAAQD,EAAME,KAAKD,OACnBR,WAAYO,EAAME,KAAKT,WAEzB,GAGwC,CAAEU,MAAAA,EAAAA,GAAOC,WAAAA,EAAAA,IAAjD,EAlGc,SAACrB,GAEd,OAAoDsB,EAAAA,EAAAA,UAAS,YAAW,eAAjEC,EAAkB,KAAEC,EAAqB,KAChD,GAAwCF,EAAAA,EAAAA,UAASG,GAAa,eAAvDC,EAAY,KAAEC,EAAe,KAET,aAO1B,OAP0B,0BAA3B,WAA4BC,EAAQC,GAAW,sFACvB7B,EAAMoB,MAAMQ,EAAOE,MAAOF,EAAOG,SAAUH,EAAOI,WAAYJ,EAAOK,QAASJ,EAAYK,WAAU,OAA7G,GACE,YADF,OACW,gCAClBlC,EAAMqB,aAAa,KAAD,EACxBQ,EAAYM,cAAc,UAAW,IAAI,OAE1CN,EAAYO,eAAc,GAAO,4CACjC,sBAED,SAASC,IACkB,aAAvBd,GACFC,EAAsB,QACtBG,EAAgBW,KAGhBd,EAAsB,YACtBG,EAAgBF,GAElB,CAEA,OAAGzB,EAAMkB,QAAe,SAAC,KAAQ,CAACqB,GAAG,cAGpC,iBAAKpC,UAAWG,EAAAA,QAAe,WAC9B,wBAAI,WACJ,SAAC,KAAM,CACNkC,cAAe,CAAEV,MAAO,GAAIC,SAAU,GAAIC,YAAY,EAAOC,QAAS,IACtEQ,SA7B4D,SAEnC,EAAD,mCA2BD,SAEtB,gBAAGC,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAAM,OACvB,UAAC,KAAI,CAACxC,UAAWG,EAAAA,UAAiB,WACjC,gBAAKH,UAAWG,EAAAA,eAAsB,UACrC,SAAC,KAAK,CACLM,KAAK,QACLC,GAAIC,EACJ8B,SAAUC,EAAAA,GACVC,KAAK,QACL/B,YAAY,QACZZ,UAAWG,EAAAA,gBAIb,iBAAKH,UAAWG,EAAAA,eAAsB,WACrC,SAAC,KAAK,CACLM,KAAK,WACLC,GAAIC,EACJ8B,SAAUG,EAAAA,GACVD,KAAMvB,EACNR,YAAY,WACZZ,UAAWG,EAAAA,iBAEZ,gBAAKH,UAAWG,EAAAA,aAAqB0C,QAASX,EAAgB,UAC7D,gBAAK5B,IAAKiB,EAAcf,IAAI,uBAG9B,iBAAKR,UAAWG,EAAAA,YAAmB,WAClC,mBAAOH,UAAWG,EAAAA,cAAqB,WACtC,SAAC,KAAK,CAACwC,KAAK,WAAWlC,KAAK,eAAe,kBAG5C,gBAAKT,UAAWG,EAAAA,MAAa,SAAEqC,EAASA,EAAOvC,MAAQ,OACtDJ,EAAMU,aAAc,SAACF,EAAO,CAACE,WAAYV,EAAMU,cAChD,mBAAQoC,KAAK,SAASG,SAAUP,EAAcvC,UAAWG,EAAAA,aAAoB,SAAC,gBAEzE,MAKZ,G","sources":["webpack://react-test/./src/components/Login/Login.module.scss?4086","webpack://react-test/./src/common/Input/Input.module.scss?b5ea","common/Input/Input.jsx","components/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__YiOI8\",\"inputContainer\":\"Login_inputContainer__iS35b\",\"emailInput\":\"Login_emailInput__ZCUWZ\",\"passwordInput\":\"Login_passwordInput__lGaq4\",\"showPassword\":\"Login_showPassword__IXDcS\",\"checkboxInput\":\"Login_checkboxInput__5q9zj\",\"submitBlock\":\"Login_submitBlock__a6W8Z\",\"submitButton\":\"Login_submitButton__bn+qZ\",\"error\":\"Login_error__bPe2+\"};","// extracted by mini-css-extract-plugin\nexport default {\"inputError\":\"Input_inputError__nt5uw\",\"error\":\"Input_error__NN6+n\"};","import { Field, useField } from \"formik\"\r\n\r\nimport styles from './Input.module.scss'\r\n\r\n\r\nconst Input = (props) => {\r\n\tconst [field ,meta, helpers] = useField(props);\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Field {...props} className={meta.error && meta.touched ? \r\n\t\t\t\t[props.className, styles.inputError].join(' ') : props.className} \r\n\t\t\t/>\r\n\t\t\t{meta.error && meta.touched && <div className={styles.error}>{meta.error}</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Input;","import { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nimport { getCaptcha, login } from '../../redux/auth-reducer';\r\nimport { validateLogin, validatePassword } from '../../common/validator';\r\n\r\nimport styles from \"./Login.module.scss\";\r\nimport showPassword from \"../../assets/img/show.png\";\r\nimport hidePassword from \"../../assets/img/hide.png\";\r\nimport Input from '../../common/Input/Input';\r\n\r\n\r\nconst Login = (props) => {\r\n\t\r\n\tconst [passwordVisibility, setPasswordVisibility] = useState(\"password\");\r\n\tconst [passwordIcon, setPasswordIcon] = useState(showPassword);\r\n\r\n\tasync function handleSubmit(values, submitProps) {\r\n\t\tconst response = await props.login(values.email, values.password, values.rememberMe, values.captcha, submitProps.setStatus)\r\n\t\tif(response === \"captcha\") {\r\n\t\t\tawait props.getCaptcha();\r\n\t\t\tsubmitProps.setFieldValue(\"captcha\", \"\");\r\n\t\t}\r\n\t\tsubmitProps.setSubmitting(false);\r\n\t}\r\n\t\r\n\tfunction passwordVisible() {\r\n\t\tif(passwordVisibility === \"password\") {\r\n\t\t\tsetPasswordVisibility(\"text\");\r\n\t\t\tsetPasswordIcon(hidePassword);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetPasswordVisibility(\"password\");\r\n\t\t\tsetPasswordIcon(showPassword);\r\n\t\t}\r\n\t}\r\n\t\r\n\tif(props.isAuth) return <Navigate to=\"/profile\"/>;\r\n\r\n\treturn(\r\n\t\t<div className={styles.wrapper}>\r\n\t\t\t<h1>Login</h1>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ email: \"\", password: \"\", rememberMe: false, captcha: \"\" }}\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t>\r\n\t\t\t\t{({ isSubmitting, status }) => (\r\n\t\t\t\t\t<Form className={styles.loginForm}>\r\n\t\t\t\t\t\t<div className={styles.inputContainer}>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tas={Input}\r\n\t\t\t\t\t\t\t\tvalidate={validateLogin}\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Login\"\r\n\t\t\t\t\t\t\t\tclassName={styles.emailInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className={styles.inputContainer}>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tas={Input}\r\n\t\t\t\t\t\t\t\tvalidate={validatePassword}\r\n\t\t\t\t\t\t\t\ttype={passwordVisibility}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tclassName={styles.passwordInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className={styles.showPassword} onClick={passwordVisible}>\r\n\t\t\t\t\t\t\t\t<img src={passwordIcon} alt=\"showPassword\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.submitBlock}>\r\n\t\t\t\t\t\t\t<label className={styles.checkboxInput}>\r\n\t\t\t\t\t\t\t\t<Field type=\"checkbox\" name=\"rememberMe\" />\r\n\t\t\t\t\t\t\t\tRemember me\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<div className={styles.error}>{status ? status.error : null}</div>\r\n\t\t\t\t\t\t\t{props.captchaImg && <Captcha captchaImg={props.captchaImg} /> }\r\n\t\t\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting} className={styles.submitButton}>Submit</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Captcha(props) {\r\n\treturn (\r\n\t\t<div className=\"\">\r\n\t\t\t<img src={props.captchaImg} alt=\"captcha\" />\r\n\t\t\t<Field\r\n\t\t\t\tname=\"captcha\"\r\n\t\t\t\tas={Input}\r\n\t\t\t\tplaceholder=\"Captcha\"\r\n\t\t\t\tclassName={styles.passwordInput}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth,\r\n\t\tcaptchaImg: state.auth.captchaImg\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { login, getCaptcha })(Login);\r\n"],"names":["props","useField","meta","className","error","touched","styles","join","Captcha","src","captchaImg","alt","name","as","Input","placeholder","connect","state","isAuth","auth","login","getCaptcha","useState","passwordVisibility","setPasswordVisibility","showPassword","passwordIcon","setPasswordIcon","values","submitProps","email","password","rememberMe","captcha","setStatus","setFieldValue","setSubmitting","passwordVisible","hidePassword","to","initialValues","onSubmit","isSubmitting","status","validate","validateLogin","type","validatePassword","onClick","disabled"],"sourceRoot":""}